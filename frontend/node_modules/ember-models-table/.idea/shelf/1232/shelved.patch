Index: app/templates/components/models-table/header-row-filtering.hbs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/templates/components/models-table/header-row-filtering.hbs	(revision 76806da8b119cb0b75e7f1afd39dcca91dd1496a)
+++ app/templates/components/models-table/header-row-filtering.hbs	(revision )
@@ -11,7 +11,12 @@
             {{#if column.useFilter}}
               <div class="{{if column.filterUsed "has-feedback"}}">
                 {{#if column.filterWithSelect}}
-                  {{models-select options=column.filterOptions cssPropertyName=column.cssPropertyName value=column.filterString class=(concat classes.input " changeFilterForColumn")}}
+                  {{models-select
+                    options=column.filterOptions
+                    cssPropertyName=column.cssPropertyName
+                    value=column.filterString
+                    class=(concat classes.input " changeFilterForColumn")
+                  }}
                 {{else}}
                   {{input type="text" value=column.filterString class=classes.input enter="" placeholder=column.filterPlaceholder}}
                 {{/if}}
Index: addon/templates/components/models-select.hbs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- addon/templates/components/models-select.hbs	(revision 76806da8b119cb0b75e7f1afd39dcca91dd1496a)
+++ addon/templates/components/models-select.hbs	(revision )
@@ -1,4 +1,4 @@
 {{#each options as |option|}}
-  <option value="{{option}}" selected={{is-equal value option}}>{{option}}</option>
+  <option value="{{option.value}}" selected={{is-equal value option.value}}>{{option.label}}</option>
 {{/each}}
 {{yield}}
Index: addon/components/models-select.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- addon/components/models-select.js	(revision 76806da8b119cb0b75e7f1afd39dcca91dd1496a)
+++ addon/components/models-select.js	(revision )
@@ -12,7 +12,9 @@
   cssPropertyName: '',
 
   change() {
-    this.set('value', this.$('option:selected').val());
+    const val = this.$('option:selected').val();
+    this.set('value', val);
+    console.log(val, '@', this.get('value'));
   }
 
 });
Index: addon/components/models-table.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- addon/components/models-table.js	(revision 76806da8b119cb0b75e7f1afd39dcca91dd1496a)
+++ addon/components/models-table.js	(revision )
@@ -122,6 +122,10 @@
   return S.capitalize(S.dasherize(name).replace(/\-/g, ' '));
 }
 
+function optionStrToObj(option) {
+  return {value: option, label: option};
+}
+
 /**
  * Updates <code>filterOptions</code> for column which use <code>filterWithSelect</code>
  * and don't have <code>predefinedFilterOptions</code>
@@ -138,7 +142,7 @@
       if (get(this, 'sortFilterOptions')) {
         options = options.sort();
       }
-      return A([''].concat(options)).uniq();
+      return A([''].concat(options)).uniq().map(optionStrToObj);
     }
     return [];
   });
@@ -836,6 +840,17 @@
    */
   pageSizeValues: A([10, 25, 50]),
 
+  /**
+   * List of options for pageSize-selectBox
+   * It's mapped from <code>pageSizeValues</code>
+   * This value should not be set manually!
+   *
+   * @type {{value: string|number, label: string|number}}
+   * @default []
+   * @private
+   */
+  pageSizeOptions: A([]),
+
   /**
    * Show first page if for some reasons there is no content for current page, but table data exists
    *
@@ -893,6 +908,7 @@
     this._setupMessages();
     this._setupIcons();
     this._setupClasses();
+    this._setupPageSizeOptions();
 
     if (get(this, 'columnsAreUpdateable')) {
       let columnFieldsToCheckUpdate = get(this, 'columnFieldsToCheckUpdate');
@@ -987,13 +1003,24 @@
 
       if (get(c, 'filterWithSelect') && get(c, 'useFilter')) {
         let predefinedFilterOptions = get(column, 'predefinedFilterOptions');
-        if (predefinedFilterOptions && predefinedFilterOptions.length && '' !== predefinedFilterOptions[0]) {
-          predefinedFilterOptions = [''].concat(predefinedFilterOptions);
-        }
         let usePredefinedFilterOptions = 'array' === typeOf(predefinedFilterOptions);
-        set(c, 'filterOptions', usePredefinedFilterOptions ? predefinedFilterOptions : []);
-        if (!usePredefinedFilterOptions && propertyName) {
-          set(c, 'filterOptions', getFilterOptionsCP(propertyName));
+        if (usePredefinedFilterOptions) {
+          const types = ['object', 'instance'];
+          const allObjects = A(predefinedFilterOptions).every(option => types.includes(typeOf(option)) && option.hasOwnProperty('label') && option.hasOwnProperty('value'));
+          const allPrimitives = A(predefinedFilterOptions).every(option => !types.includes(typeOf(option)));
+          assert('`predefinedFilterOptions` should be an array of objects or primitives and not mixed', allObjects || allPrimitives);
+          if (allPrimitives) {
+            predefinedFilterOptions = predefinedFilterOptions.map(optionStrToObj);
+          }
+          if ('' !== predefinedFilterOptions[0].value) {
+            predefinedFilterOptions = [{value: '', label: ''}].concat(predefinedFilterOptions);
+          }
+          set(c, 'filterOptions', usePredefinedFilterOptions ? predefinedFilterOptions : []);
+        }
+        else {
+          if (propertyName) {
+            set(c, 'filterOptions', getFilterOptionsCP(propertyName));
+          }
         }
       }
       return c;
@@ -1064,6 +1091,18 @@
     set(this, 'classes', O.create(newClasses));
   },
 
+  /**
+   * Provide backward compatibility with <code>pageSizeValues</code> equal to an array with numbers and not objects
+   * <code>pageSizeValues</code> is live as is, <code>pageSizeOptions</code> is used in the templates
+   *
+   * @private
+   * @name ModelsTable#_setupPageSizeOptions
+   */
+  _setupPageSizeOptions() {
+    let pageSizeOptions = get(this, 'pageSizeValues').map(optionStrToObj);
+    set(this, 'pageSizeOptions', pageSizeOptions);
+  },
+
   /**
    * Set <code>sortProperties</code> when single-column sorting is used
    *
Index: app/templates/components/models-table/page-size.hbs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/templates/components/models-table/page-size.hbs	(revision 76806da8b119cb0b75e7f1afd39dcca91dd1496a)
+++ app/templates/components/models-table/page-size.hbs	(revision )
@@ -1,5 +1,9 @@
 <div class="{{classes.pageSizeWrapper}}">
   <div class="{{classes.pageSizeSelectWrapper}}">
-    {{models-select options=pageSizeValues value=pageSize class=(concat classes.input " changePageSize")}}
+    {{models-select
+      options=pageSizeOptions
+      value=pageSize
+      class=(concat classes.input " changePageSize")
+    }}
   </div>
 </div>
\ No newline at end of file

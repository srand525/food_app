Index: addon/templates/components/models-table/table-footer.hbs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{{yield\n  (hash\n    goToPage=goToPage\n    clearFilters=clearFilters\n    sendAction=sendAction\n    expandRow=expandRow\n    collapseRow=collapseRow\n    expandAllRows=expandAllRows\n    collapseAllRows=collapseAllRows\n    themeInstance=themeInstance\n  )\n}}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- addon/templates/components/models-table/table-footer.hbs	(revision 1807307f6a70716fee88bfad70a01aa4163c750f)
+++ addon/templates/components/models-table/table-footer.hbs	(revision )
@@ -1,12 +1,34 @@
-{{yield
-  (hash
-    goToPage=goToPage
-    clearFilters=clearFilters
-    sendAction=sendAction
-    expandRow=expandRow
-    collapseRow=collapseRow
-    expandAllRows=expandAllRows
-    collapseAllRows=collapseAllRows
-    themeInstance=themeInstance
-  )
-}}
\ No newline at end of file
+{{#with (hash
+  goToPage=goToPage
+  clearFilters=clearFilters
+  sendAction=sendAction
+  expandRow=expandRow
+  collapseRow=collapseRow
+  expandAllRows=expandAllRows
+  collapseAllRows=collapseAllRows
+  themeInstance=themeInstance
+  expandedItems=expandedItems
+  clearFilters=clearFilters
+) as |tf|}}
+  {{#if hasBlock}}
+    {{yield tf}}
+  {{else}}
+    <tr>
+      {{#each visibleProcessedColumns as |column|}}
+        {{#if column.componentForFooterCell}}
+        {{component
+          column.componentForFooterCell
+          selectedItems=selectedItems
+          expandedItems=expandedItems
+          data=data
+          mappedSelectedItems=(if column.propertyName (map-by column.propertyName selectedItems))
+          mappedExpandedItems=(if column.propertyName (map-by column.propertyName expandedItems))
+          mappedData=(if column.propertyName (map-by column.propertyName data))
+        }}
+        {{else}}
+          <td></td>
+        {{/if}}
+      {{/each}}
+    </tr>
+  {{/if}}
+{{/with}}
\ No newline at end of file
Index: ember-cli-build.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/* eslint-env node */\n'use strict';\n\nconst EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\nmodule.exports = function(defaults) {\n  let app = new EmberAddon(defaults, {\n    'ember-composable-helpers': {\n      only: ['intersect', 'filter-by']\n    }\n    // Add options here\n  });\n\n  /*\n    This build file specifies the options for the dummy test app of this\n    addon, located in `/tests/dummy`\n    This build file does *not* influence how the addon or the app using it\n    behave. You most likely want to be modifying `./index.js` or app's build file\n  */\n\n  return app.toTree();\n};\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ember-cli-build.js	(revision 1807307f6a70716fee88bfad70a01aa4163c750f)
+++ ember-cli-build.js	(revision )
@@ -6,7 +6,7 @@
 module.exports = function(defaults) {
   let app = new EmberAddon(defaults, {
     'ember-composable-helpers': {
-      only: ['intersect', 'filter-by']
+      only: ['intersect', 'filter-by', 'map-by', 'reject-by']
     }
     // Add options here
   });
Index: addon/themes/default.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import EmberObject from '@ember/object';\n\n/**\n * Almost empty skeleton for themes. Extend it to provide custom css-classes for table items and icons.\n *\n * Check [BootstrapTheme](Themes.Bootstrap3.html) for implementation example.\n *\n * Check [ModelsTable.themeInstance](Components.ModelsTable.html#property_themeInstance) for usage example.\n *\n * @class Default\n * @namespace Themes\n */\nexport default EmberObject.extend({\n\n  mergedProperties: ['components'],\n\n  /**\n   * Map with internal components\n   *\n   * You may override it if some custom component should be used instead the default one. You don't need to copy whole map because it's declared as a [mergedProperty](https://www.emberjs.com/api/ember/2.14/classes/Ember.CoreObject/properties/mergedProperties?anchor=mergedProperties)\n   */\n  components: {\n    'cell': 'models-table/cell',\n    'cell-content-display': 'models-table/cell-content-display',\n    'cell-content-edit': 'models-table/cell-content-edit',\n    'columns-dropdown': 'models-table/columns-dropdown',\n    'columns-hidden': 'models-table/columns-hidden',\n    'data-group-by-select': 'models-table/data-group-by-select',\n    'footer': 'models-table/footer',\n    'global-filter': 'models-table/global-filter',\n    'grouped-header': 'models-table/grouped-header',\n    'no-data': 'models-table/no-data',\n    'page-size-select': 'models-table/page-size-select',\n    'pagination-numeric': 'models-table/pagination-numeric',\n    'pagination-simple': 'models-table/pagination-simple',\n    'row': 'models-table/row',\n    'row-expand': 'models-table/row-expand',\n    'row-filtering': 'models-table/row-filtering',\n    'row-filtering-cell': 'models-table/row-filtering-cell',\n    'row-grouping': 'models-table/row-grouping',\n    'row-group-toggle': 'models-table/row-group-toggle',\n    'row-sorting': 'models-table/row-sorting',\n    'row-sorting-cell': 'models-table/row-sorting-cell',\n    'select': 'models-table/select',\n    'summary': 'models-table/summary',\n    'table': 'models-table/table',\n    'table-body': 'models-table/table-body',\n    'table-footer': 'models-table/table-footer',\n    'table-header': 'models-table/table-header'\n  },\n\n  tagNames: {\n    /* blank for backward compatibility */\n    'cell-content': ''\n  },\n\n  /**\n   * @property table\n   * @type string\n   * @default ''\n   */\n  table: '',\n\n  /**\n   * @property buttonsGroup\n   * @type string\n   * @default ''\n   */\n  buttonsGroup: '',\n\n  /**\n   * @type string\n   * @property globalFilterWrapper\n   * @default ''\n   */\n  globalFilterWrapper: '',\n\n  /**\n   * @type string\n   * @property columnsDropdownWrapper\n   * @default ''\n   */\n  columnsDropdownWrapper: '',\n\n  /**\n   * @type string\n   * @property columnsDropdownButtonWrapper\n   * @default ''\n   */\n  columnsDropdownButtonWrapper: '',\n\n  /**\n   * @type string\n   * @property columnsDropdown\n   * @default ''\n   */\n  columnsDropdown: '',\n\n  /**\n   * @type string\n   * @property columnsDropdownDivider\n   * @default ''\n   */\n  columnsDropdownDivider: '',\n\n  /**\n   * @type string\n   * @property dataGroupBySelectWrapper\n   * @default ''\n   */\n  dataGroupBySelectWrapper: 'data-group-by-wrapper',\n\n  /**\n   * CSS-class for table-header\n   *\n   * @type string\n   * @property theadCell\n   * @default 'table-header'\n   */\n  theadCell: 'table-header',\n\n  /**\n   * CSS-class used for thead-cells with columns titles. This class is used only if columns is not sortable\n   *\n   * @type string\n   * @property theadCellNoSorting\n   * @default 'table-header-no-sorting'\n   */\n  theadCellNoSorting: 'table-header-no-sorting',\n\n  /**\n   * CSS-class used for thead-cells with columns filters. This class is used only if columns is not filterable\n   *\n   * @type string\n   * @property theadCellNoFiltering\n   * @default 'table-header-no-filtering'\n   */\n  theadCellNoFiltering: 'table-header-no-filtering',\n\n  /**\n   * @type string\n   * @property selectedRow\n   * @default 'selected-row'\n   */\n  selectedRow: 'selected-row',\n\n  /**\n   * @type string\n   * @property expandedRow\n   * @default 'expanded-row'\n   */\n  expandedRow: 'expanded-row',\n\n  /**\n   * CSS-class for table footer\n   *\n   * @type string\n   * @property tfooterWrapper\n   * @default 'table-footer'\n   */\n  tfooterWrapper: 'table-footer',\n\n  /**\n   * @type string\n   * @property tfooterInternalWrapper\n   * @default ''\n   */\n  tfooterInternalWrapper: '',\n\n  /**\n   * CSS-class for table summary block\n   *\n   * @type string\n   * @property footerSummary\n   * @default 'table-summary'\n   */\n  footerSummary: 'table-summary',\n\n  /**\n   * @type string\n   * @property footerSummaryNumericPagination\n   * @default ''\n   */\n  footerSummaryNumericPagination: '',\n\n  /**\n   * @type string\n   * @property footerSummaryDefaultPagination\n   * @default ''\n   */\n  footerSummaryDefaultPagination: '',\n\n  /**\n   * @type string\n   * @property pageSizeWrapper\n   * @default ''\n   */\n  pageSizeWrapper: '',\n\n  /**\n   * @type string\n   * @property pageSizeSelectWrapper\n   * @default ''\n   */\n  pageSizeSelectWrapper: '',\n\n  /**\n   * Wrapper for pagination blocks\n   *\n   * @type string\n   * @property paginationWrapper\n   * @default 'table-nav'\n   */\n  paginationWrapper: 'table-nav',\n\n  /**\n   * @type string\n   * @property paginationInternalWrapper\n   * @default ''\n   */\n  paginationInternalWrapper: '',\n\n  /**\n   * @type string\n   * @property paginationWrapperNumeric\n   * @default ''\n   */\n  paginationWrapperNumeric: '',\n\n  /**\n   * @type string\n   * @property paginationWrapperDefault\n   * @default ''\n   */\n  paginationWrapperDefault: '',\n\n  /**\n   * @type string\n   * @property paginationBlock\n   * @default ''\n   */\n  paginationBlock: '',\n\n  /**\n   * @type string\n   * @property paginationNumericItem\n   * @default ''\n   */\n  paginationNumericItem: '',\n\n  /**\n   * @type string\n   * @property paginationNumericItemActive\n   * @default ''\n   */\n  paginationNumericItemActive: '',\n\n  /**\n   * @type string\n   * @property buttonDefault\n   * @default ''\n   */\n  buttonDefault: '',\n\n  /**\n   * @type string\n   * @property buttonLink\n   * @default ''\n   */\n  buttonLink: '',\n\n  /**\n   * @type string\n   * @property noDataCell\n   * @default ''\n   */\n  noDataCell: '',\n\n  /**\n   * @type string\n   * @property collapseRow\n   * @default 'collapse-row'\n   */\n  collapseRow: 'collapse-row',\n\n  /**\n   * @type string\n   * @property collapseAllRows\n   * @default 'collapse-all-rows'\n   */\n  collapseAllRows: 'collapse-all-rows',\n\n  /**\n   * @type string\n   * @property expandRow\n   * @default 'expand-row'\n   */\n  expandRow: 'expand-row',\n\n  /**\n   * @type string\n   * @property expandAllRows\n   * @default 'expand-all-rows'\n   */\n  expandAllRows: 'expand-all-rows',\n\n  /**\n   * @type string\n   * @property cellContentDisplay\n   * @default ''\n   */\n  cellContentDisplay: '',\n\n  /**\n   * @type string\n   * @property cellContentEdit\n   * @default ''\n   */\n  cellContentEdit: '',\n\n  /**\n   * @type string\n   * @property thead\n   * @default ''\n   */\n  thead: '',\n\n  /**\n   * @type string\n   * @property input\n   * @default ''\n   */\n  input: '',\n\n  /**\n   * @type string\n   * @property select\n   * @default ''\n   */\n  select: '',\n\n  /**\n   * @type string\n   * @property clearFilterIcon\n   * @default ''\n   */\n  clearFilterIcon: '',\n\n  /**\n   * @type string\n   * @property clearAllFiltersIcon\n   * @default ''\n   */\n  clearAllFiltersIcon: '',\n\n  /**\n   * @type string\n   * @property globalFilterDropdownWrapper\n   * @default ''\n   */\n  globalFilterDropdownWrapper: '',\n\n  /**\n   * @type string\n   * @default 'change-group-by-field'\n   * @property changeGroupByField\n   */\n  changeGroupByField: 'change-group-by-field',\n\n  /**\n   * @type string\n   * @default ''\n   * @property sortGroupedPropertyBtn\n   */\n  sortGroupedPropertyBtn: 'sort-grouped-field',\n\n  /**\n   * @type string\n   * @property groupingRow\n   * @default 'grouping-row'\n   */\n  groupingRow: 'grouping-row',\n\n  /**\n   * @type string\n   * @property groupingCell\n   * @default 'grouping-cell'\n   */\n  groupingCell: 'grouping-cell',\n\n  /**\n   * @type string\n   * @property sort-asc\n   * @default ''\n   */\n  'sort-asc': '',\n\n  /**\n   * @type string\n   * @property sort-desc\n   * @default ''\n   */\n  'sort-desc': '',\n\n  /**\n   * @type string\n   * @property column-visible\n   * @default ''\n   */\n  'column-visible': '',\n\n  /**\n   * @type string\n   * @property column-hidden\n   * @default ''\n   */\n  'column-hidden': '',\n\n  /**\n   * @type string\n   * @property nav-first\n   * @default ''\n   */\n  'nav-first': '',\n\n  /**\n   * @type string\n   * @property nav-prev\n   * @default ''\n   */\n  'nav-prev': '',\n\n  /**\n   * @type string\n   * @property nav-next\n   * @default ''\n   */\n  'nav-next': '',\n\n  /**\n   * @type string\n   * @property nav-last\n   * @default ''\n   */\n  'nav-last': '',\n\n  /**\n   * @type string\n   * @property caret\n   * @default ''\n   */\n  'caret': '',\n\n  /**\n   * @type string\n   * @property expand-row\n   * @default ''\n   */\n  'expand-row': '',\n\n  /**\n   * @type string\n   * @property expand-all-rows\n   * @default ''\n   */\n  'expand-all-rows': '',\n\n  /**\n   * @type string\n   * @property collapse-row\n   * @default ''\n   */\n  'collapse-row': '',\n\n  /**\n   * @type string\n   * @property collapse-all-rows\n   * @default ''\n   */\n  'collapse-all-rows': '',\n\n  /**\n   * @type string\n   * @property select-all-rows\n   * @default ''\n   */\n  'select-all-rows': '',\n\n  /**\n   * @type string\n   * @property deselect-all-rows\n   * @default ''\n   */\n  'deselect-all-rows': '',\n\n  /**\n   * @type string\n   * @property select-row\n   * @default ''\n   */\n  'select-row': '',\n\n  /**\n   * @type string\n   * @property deselect-row\n   * @default ''\n   */\n  'deselect-row': ''\n});\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- addon/themes/default.js	(revision 1807307f6a70716fee88bfad70a01aa4163c750f)
+++ addon/themes/default.js	(revision )
@@ -23,6 +23,7 @@
     'cell': 'models-table/cell',
     'cell-content-display': 'models-table/cell-content-display',
     'cell-content-edit': 'models-table/cell-content-edit',
+    'cell-column-summary': 'models-table/cell-column-summary',
     'columns-dropdown': 'models-table/columns-dropdown',
     'columns-hidden': 'models-table/columns-hidden',
     'data-group-by-select': 'models-table/data-group-by-select',
Index: tests/dummy/app/routes/examples/example.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Route from '@ember/routing/route';\nimport {get} from '@ember/object';\nimport {A} from '@ember/array';\nimport {next} from '@ember/runloop';\n\nexport default Route.extend({\n  beforeModel() {\n    return this.get('store').query('user', {pageSize: 100});\n  },\n  model() {\n    return this.get('store').query('user', {});\n  },\n\n  setupController(controller) {\n    controller.set('columns', A([\n      {propertyName: 'index'},\n      {propertyName: 'firstName'},\n      {propertyName: 'lastName'},\n      {propertyName: 'age'},\n      {propertyName: 'city'}\n    ]));\n    controller.set('filterQueryParameters', {\n      globalFilter: 'globalSearch',\n      sort: 'sort',\n      sortDirection: 'sortDirection',\n      page: 'page',\n      pageSize: 'pageSize'\n    });\n    controller.set('data', A(get(this, 'store').peekAll('user').slice()));\n    return this._super(...arguments);\n  },\n\n  actions: {\n    didTransition() {\n      next(() => {\n        if (window && window['Prism']) {\n          Prism.highlightAll();\n        }\n      });\n      return true;\n    }\n  }\n\n});\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- tests/dummy/app/routes/examples/example.js	(revision 1807307f6a70716fee88bfad70a01aa4163c750f)
+++ tests/dummy/app/routes/examples/example.js	(revision )
@@ -16,7 +16,7 @@
       {propertyName: 'index'},
       {propertyName: 'firstName'},
       {propertyName: 'lastName'},
-      {propertyName: 'age'},
+      {propertyName: 'age', componentForFooterCell: 'models-table/cell-column-summary'},
       {propertyName: 'city'}
     ]));
     controller.set('filterQueryParameters', {
Index: app/components/models-table/cell-column-summary.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/components/models-table/cell-column-summary.js	(revision )
+++ app/components/models-table/cell-column-summary.js	(revision )
@@ -0,0 +1,1 @@
+export { default } from 'ember-models-table/components/models-table/cell-column-summary';
\ No newline at end of file
Index: addon/utils/column.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { isEmpty } from '@ember/utils';\nimport O, { get, set, computed, observer } from '@ember/object';\nimport { A } from '@ember/array';\n\n/**\n * Column definition class for ModelsTable columns\n *\n * Check its public properties\n *\n * @class ModelsTableColumn\n * @extends Ember.Object\n * @namespace Utils\n * @private\n */\nexport default O.extend({\n\n  /**\n   * Value inverted to the {{#crossLink \"Utils.ModelsTableColumn/isHidden:property\"}}isHidden{{/crossLink}} initial value\n   *\n   * It set on column init and not changed any more\n   *\n   * @property defaultVisible\n   * @type boolean\n   * @private\n   * @readOnly\n   */\n\n  /**\n   * Field-name of the data's object shown in the current column. If it isn't provided, sorting and filtering options for current column are ignored\n   *\n   * @default ''\n   * @property propertyName\n   * @type string\n   */\n  propertyName: '',\n\n  /**\n   * Header for column. If it isn't provided, capitalized `propertyName` is used\n   *\n   * @default ''\n   * @property title\n   * @type string\n   */\n  title: null,\n\n  /**\n   * Custom component used in the column's cells.\n   *\n   * It will receive several options:\n   *\n   *  * `data` - whole dataset passed to the `models-table`\n   *  * `record` - current row\n   *  * `index` - current row index\n   *  * `column` - current column (one of the {{#crossLink \"Components.ModelsTable/processedColumns:property\"}}processedColumns{{/crossLink}})\n   *  * `sendAction` - closure action {{#crossLink \"Components.ModelsTable/actions.sendAction:method\"}}ModelsTable.actions.sendAction{{/crossLink}}\n   *  * `expandRow` - closure action {{#crossLink \"Components.ModelsTable/actions.expandRow:method\"}}ModelsTable.actions.expandRow{{/crossLink}}\n   *  * `collapseRow` - closure action {{#crossLink \"Components.ModelsTable/actions.collapseRow:method\"}}ModelsTable.actions.collapseRow{{/crossLink}}\n   *  * `expandAllRows` - closure action {{#crossLink \"Components.ModelsTable/actions.expandAllRows:method\"}}ModelsTable.actions.expandAllRows{{/crossLink}}\n   *  * `collapseAllRows` - closure action {{#crossLink \"Components.ModelsTable/actions.collapseAllRows:method\"}}ModelsTable.actions.collapseAllRows{{/crossLink}}\n   *  * `clickOnRow` - closure action {{#crossLink \"Components.ModelsTable/actions.clickOnRow:method\"}}ModelsTable.actions.clickOnRow{{/crossLink}}\n   *  * `editRow` - closure action {{#crossLink \"Components.ModelsTableRow/actions.editRow:method\"}}ModelsTable.actions.editRow{{/crossLink}}\n   *  * `cancelEditRow` - closure action {{#crossLink \"Components.ModelsTableRow/actions.cancelEditRow:method\"}}ModelsTable.actions.cancelEditRow{{/crossLink}}\n   *  * `themeInstance` - bound from {{#crossLink \"Components.ModelsTable/themeInstance:property\"}}ModelsTable.themeInstance{{/crossLink}}\n   *  * `isExpanded` - is current row expanded\n   *  * `isSelected` - is current row selected\n   *  * `isEditRow` - is the row editable (one of the {{#crossLink \"Components.ModelsTableRow/isEditRow:property\"}}processedColumns{{/crossLink}})\n   *  * `isColumnEditable` - is the column currently editable\n   *\n   * @type string\n   * @property component\n   * @default ''\n   */\n  component: '',\n\n  /**\n   * Custom component used in the column's cells when the row is in edit mode\n   *\n   * It will receive several options:\n   *\n   *  * `data` - whole dataset passed to the `models-table`\n   *  * `record` - current row\n   *  * `index` - current row index\n   *  * `column` - current column (one of the {{#crossLink \"Components.ModelsTable/processedColumns:property\"}}processedColumns{{/crossLink}})\n   *  * `sendAction` - closure action {{#crossLink \"Components.ModelsTable/actions.sendAction:method\"}}ModelsTable.actions.sendAction{{/crossLink}}\n   *  * `expandRow` - closure action {{#crossLink \"Components.ModelsTable/actions.expandRow:method\"}}ModelsTable.actions.expandRow{{/crossLink}}\n   *  * `collapseRow` - closure action {{#crossLink \"Components.ModelsTable/actions.collapseRow:method\"}}ModelsTable.actions.collapseRow{{/crossLink}}\n   *  * `expandAllRows` - closure action {{#crossLink \"Components.ModelsTable/actions.expandAllRows:method\"}}ModelsTable.actions.expandAllRows{{/crossLink}}\n   *  * `collapseAllRows` - closure action {{#crossLink \"Components.ModelsTable/actions.collapseAllRows:method\"}}ModelsTable.actions.collapseAllRows{{/crossLink}}\n   *  * `clickOnRow` - closure action {{#crossLink \"Components.ModelsTable/actions.clickOnRow:method\"}}ModelsTable.actions.clickOnRow{{/crossLink}}\n   *  * `editRow` - closure action {{#crossLink \"Components.ModelsTableRow/actions.editRow:method\"}}ModelsTable.actions.editRow{{/crossLink}}\n   *  * `cancelEditRow` - closure action {{#crossLink \"Components.ModelsTableRow/actions.cancelEditRow:method\"}}ModelsTable.actions.cancelEditRow{{/crossLink}}\n   *  * `themeInstance` - bound from {{#crossLink \"Components.ModelsTable/themeInstance:property\"}}ModelsTable.themeInstance{{/crossLink}}\n   *  * `isExpanded` - is current row expanded\n   *  * `isSelected` - is current row selected\n   *  * `isEditRow` - is the row editable (one of the {{#crossLink \"Components.ModelsTableRow/isEditRow:property\"}}processedColumns{{/crossLink}})\n   *  * `isColumnEditable` - is the column currently editable\n   *\n   * @type string\n   * @property component\n   * @default ''\n   */\n  componentForEdit: '',\n\n  /**\n   * Is this column allowed to be editable\n   *\n   * @default true\n   * @property editable\n   * @type boolean\n   */\n  editable: true,\n\n  /**\n   * Custom component used in the header cell with filter\n   *\n   * It will receive several options:\n   *\n   * * `column` - current column (one of the {{#crossLink \"Components.ModelsTable/processedColumns:property\"}}processedColumns{{/crossLink}})\n   * * `data` - whole dataset passed to the `models-table`\n   * * `selectedItems` - bound from {{#crossLink \"Components.ModelsTable/_selectedItems:property\"}}ModelsTable._selectedItems{{/crossLink}}\n   * * `expandedItems` - bound from {{#crossLink \"Components.ModelsTable/_expandedItems:property\"}}ModelsTable._expandedItems{{/crossLink}}\n   * * `themeInstance` - bound from {{#crossLink \"Components.ModelsTable/themeInstance:property\"}}ModelsTable.themeInstance{{/crossLink}}\n   * * `sendAction` - closure action {{#crossLink \"Components.ModelsTable/actions.sendAction:method\"}}ModelsTable.actions.sendAction{{/crossLink}}\n   * * `expandAllRows` - closure action {{#crossLink \"Components.ModelsTable/actions.expandAllRows:method\"}}ModelsTable.actions.expandAllRows{{/crossLink}}\n   * * `collapseAllRows` - closure action {{#crossLink \"Components.ModelsTable/actions.collapseAllRows:method\"}}ModelsTable.actions.collapseAllRows{{/crossLink}}\n   * * `toggleAllSelection` - closure action {{#crossLink \"Components.ModelsTable/actions.toggleAllSelection:method\"}}ModelsTable.actions.toggleAllSelection{{/crossLink}}\n   *\n   * @type string\n   * @property componentForFilterCell\n   * @default ''\n   */\n  componentForFilterCell: '',\n\n  /**\n   * Custom component used in the header cell with sorting and column title\n   *\n   * It will receive several options:\n   *\n   * * `column` - current column (one of the {{#crossLink \"Components.ModelsTable/processedColumns:property\"}}processedColumns{{/crossLink}})\n   * * `data` - whole dataset passed to the `models-table`\n   * * `selectedItems` - bound from {{#crossLink \"Components.ModelsTable/_selectedItems:property\"}}ModelsTable._selectedItems{{/crossLink}}\n   * * `expandedItems` - bound from {{#crossLink \"Components.ModelsTable/_expandedItems:property\"}}ModelsTable._expandedItems{{/crossLink}}\n   * * `themeInstance` - bound from {{#crossLink \"Components.ModelsTable/themeInstance:property\"}}ModelsTable.themeInstance{{/crossLink}}\n   * * `sendAction` - closure action {{#crossLink \"Components.ModelsTable/actions.sendAction:method\"}}ModelsTable.actions.sendAction{{/crossLink}}\n   * * `expandAllRows` - closure action {{#crossLink \"Components.ModelsTable/actions.expandAllRows:method\"}}ModelsTable.actions.expandAllRows{{/crossLink}}\n   * * `collapseAllRows` - closure action {{#crossLink \"Components.ModelsTable/actions.collapseAllRows:method\"}}ModelsTable.actions.collapseAllRows{{/crossLink}}\n   * * `toggleAllSelection` - closure action {{#crossLink \"Components.ModelsTable/actions.toggleAllSelection:method\"}}ModelsTable.actions.toggleAllSelection{{/crossLink}}\n   *\n   * @type string\n   * @property componentForSortCell\n   * @default ''\n   */\n  componentForSortCell: '',\n\n  /**\n   * Field-name for sorting by current column. If it isn't provided, `propertyName` is used\n   *\n   * @type string\n   * @property sortedBy\n   * @default null\n   */\n  sortedBy: null,\n\n  /**\n   * The default sorting for this column. Can be either `asc` or `desc`. Needs to be set in conjunction with `sortPrecedence`,\n   otherwise it will not have any effect\n   *\n   * @type string\n   * @property sortDirection\n   * @default ''\n   */\n  sortDirection: '',\n\n  /**\n   * Sort precedence for this column - needs to be larger than -1 for sortDirection to take effect\n   *\n   * @type number\n   * @property sortPrecedence\n   * @default ''\n   */\n  sortPrecedence: null,\n\n  /**\n   * If sorting should be disabled for this column\n   *\n   * @property disableSorting\n   * @type boolean\n   * @default false\n   */\n  disableSorting: false,\n\n  /**\n   * If filtering should be disabled for this column\n   *\n   * @property disableFiltering\n   * @type boolean\n   * @default false\n   */\n  disableFiltering: false,\n\n  /**\n   * FilterString a default filtering for this column\n   *\n   * @property filterString\n   * @type string\n   * @default ''\n   */\n  filterString: '',\n\n  /**\n   * Custom data's property that is used to filter column. If it isn't provided, `propertyName` is used\n   *\n   * @type string\n   * @property filteredBy\n   * @default null\n   */\n  filteredBy: null,\n\n  /**\n   * Sorting is column sorted now\n   *\n   * @property sorting\n   * @type boolean\n   * @default false\n   */\n  sorting: false,\n\n  /**\n   * Is current column hidden by default\n   *\n   * @property isHidden\n   * @default false\n   * @type boolean\n   */\n  isHidden: false,\n\n  /**\n   * Can current column be hidden. This field determines, if column appears in the columns-dropdown. If `mayBeHidden` is `true` and `isHidden` is also `true` for column, this column always be hidden\n   *\n   * @property mayBeHidden\n   * @default true\n   * @type boolean\n   */\n  mayBeHidden: true,\n\n  /**\n   * If `true` select-dropdown will be used for filtering by current column. Options are unique values for <code>data.@each.${propertyName}</code>\n   *\n   * @property filterWithSelect\n   * @type boolean\n   * @default false\n   */\n  filterWithSelect: false,\n\n  /**\n   * Should options in the select-box be sorted\n   *\n   * @property sortFilterOptions\n   * @default false\n   * @type boolean\n   */\n  sortFilterOptions: false,\n\n  /**\n   * List of option to the filter-box (used if {{#crossLink \"Utils.ModelsTableColumn/filterWithSelect:property\"}}filterWithSelect{{/crossLink}} is true)\n   *\n   * @type string[]|number[]|boolean[]\n   * @property predefinedFilterOptions\n   * @default null\n   */\n  predefinedFilterOptions: null,\n\n  /**\n   * Custom class-name for cells in the current column. This class-name will also be added to the header and filter of the column\n   *\n   * @property className\n   * @default ''\n   * @type string\n   */\n  className: '',\n\n  /**\n   * Custom function used to filter rows (used if {{#crossLink \"Utils.ModelsTableColumn/filterWithSelect:property\"}}filterWithSelect{{/crossLink}} is false)\n   *\n   * @property filterFunction\n   * @type function\n   */\n  filterFunction: null,\n\n  /**\n   * Placeholder for filter-input\n   *\n   * @property filterPlaceholder\n   * @type string\n   * @default ''\n   */\n  filterPlaceholder: '',\n\n  /**\n   * If this property is defined, link to the route will be rendered in the cell. {{#crossLink \"Utils.ModelsTableColumn/propertyName:property\"}}propertyName{{/crossLink}} is used as an anchor. If it's not declared, `id` will be used. <br /> Main idea for `routeName` is to provide a simple way to generate links for each model in the `data`. It should not be used for any other purposes\n   *\n   * @property routeName\n   * @type string\n   * @default ''\n   */\n  routeName: '',\n\n  /**\n   * Object containing the definition of the column passed into the component\n   *\n   * @property originalDefinition\n   * @type object\n   * @default null\n   * @readOnly\n   * @private\n   */\n  originalDefinition: null,\n\n  /**\n   * @type string\n   * @property cssPropertyName\n   * @private\n   * @readOnly\n   */\n  cssPropertyName: computed('propertyName', function () {\n    return get(this, 'propertyName').replace(/\\./g, '-');\n  }),\n\n  /**\n   * @type boolean\n   * @property isVisible\n   * @private\n   * @readOnly\n   */\n  isVisible: computed.not('isHidden'),\n\n  /**\n   * @type boolean\n   * @property sortAsc\n   * @private\n   * @readOnly\n   */\n  sortAsc: computed.equal('sorting', 'asc'),\n\n  /**\n   * @type boolean\n   * @property sortDesc\n   * @private\n   * @readOnly\n   */\n  sortDesc: computed.equal('sorting', 'desc'),\n\n  /**\n   * @type boolean\n   * @property filterUsed\n   * @private\n   * @readOnly\n   */\n  filterUsed: computed.notEmpty('filterString'),\n\n  /**\n   * Allow sorting for column or not\n   *\n   * @type boolean\n   * @property useSorting\n   * @private\n   * @readOnly\n   */\n  useSorting: computed('sortField', 'disableSorting', function () {\n    return get(this, 'sortField') && !get(this, 'disableSorting');\n  }),\n\n  /**\n   * @property sortField\n   * @type string\n   * @readonly\n   */\n  sortField: computed('sortedBy', 'propertyName', function () {\n    return get(this, 'sortedBy') || get(this, 'propertyName');\n  }).readOnly(),\n\n  /**\n   * Allow filtering for column or not\n   *\n   * @type boolean\n   * @property useFilter\n   * @private\n   * @readOnly\n   */\n  useFilter: computed('filterField', 'disableFiltering', function () {\n    return get(this, 'filterField') && !get(this, 'disableFiltering');\n  }),\n\n  /**\n   * @type string\n   * @property filterField\n   * @readonly\n   */\n  filterField: computed('filteredBy', 'propertyName', function() {\n    return get(this, 'filteredBy') || get(this, 'propertyName');\n  }).readOnly(),\n\n  /**\n   * If preselected option doesn't exist after <code>filterOptions</code> update,\n   * <code>filterString</code> is reverted to empty string (basically, filtering for this column is dropped)\n   *\n   * @method cleanFilterString\n   * @private\n   */\n  cleanFilterString: observer('filterWithSelect', 'filterOptions.[]', 'filterString', function () {\n    let filterOptions = get(this, 'filterOptions');\n    let filterWithSelect = get(this, 'filterWithSelect');\n    let filterString = get(this, 'filterString');\n    if (!filterWithSelect || isEmpty(filterOptions)) {\n      return;\n    }\n    const filterOptionExists = A(filterOptions).find(option => {\n      const value = get(option, 'value');\n      return [value, '' + value].indexOf(filterString) !== -1;\n    });\n    if (!filterOptionExists) {\n      set(this, 'filterString', '');\n    }\n  })\n\n});\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- addon/utils/column.js	(revision 1807307f6a70716fee88bfad70a01aa4163c750f)
+++ addon/utils/column.js	(revision )
@@ -152,6 +152,13 @@
    */
   componentForSortCell: '',
 
+  /**
+   * @type string
+   * @property componentForFooterCell
+   * @default ''
+   */
+  componentForFooterCell: '',
+
   /**
    * Field-name for sorting by current column. If it isn't provided, `propertyName` is used
    *
Index: addon/components/models-table/cell-column-summary.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- addon/components/models-table/cell-column-summary.js	(revision )
+++ addon/components/models-table/cell-column-summary.js	(revision )
@@ -0,0 +1,48 @@
+import Component from '@ember/component';
+import {computed, get} from '@ember/object';
+import layout from '../../templates/components/models-table/cell-column-summary';
+
+function sumBy(collection) {
+  return computed(`${collection}.[]`, function () {
+    const c = get(this, collection);
+    return c ? c.reduce((a, b) => a + b, 0) : 0;
+  });
+}
+
+function avgBy(collection, sumBy) {
+  return computed(sumBy, function () {
+    const count = get(this, `${collection}.length`);
+    return count ? get(this, sumBy) / count : 0;
+  });
+}
+
+function minBy(collection) {
+  return computed(`${collection}.[]`, function () {
+    return Math.min.apply(Math, get(this, collection));
+  });
+}
+
+function maxBy(collection) {
+  return computed(`${collection}.[]`, function () {
+    return Math.max.apply(Math, get(this, collection));
+  });
+}
+
+export default Component.extend({
+  layout,
+  tagName: 'td',
+
+  mappedSelectedItems: computed(function () {
+    return [];
+  }),
+
+  minSelected: minBy('mappedSelectedItems'),
+  maxSelected: maxBy('mappedSelectedItems'),
+  sumSelected: sumBy('mappedSelectedItems'),
+  avgSelected: avgBy('mappedSelectedItems', 'sumSelected'),
+
+  mappedExpandedItems: computed(function () {
+    return [];
+  })
+
+});
Index: addon/templates/components/models-table/table.hbs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{{#with (hash\n  header=(\n    component themeInstance.components.table-header\n    noHeaderFilteringAndSorting=noHeaderFilteringAndSorting\n    groupedHeaders=groupedHeaders\n    visibleProcessedColumns=visibleProcessedColumns\n    useFilteringByColumns=useFilteringByColumns\n    themeInstance=themeInstance\n    messages=messages\n    sort=sort\n    data=data\n    selectedItems=selectedItems\n    expandedItems=expandedItems\n    useDataGrouping=useDataGrouping\n    displayGroupedValueAs=displayGroupedValueAs\n    sendAction=sendAction\n    expandRow=expandRow\n    collapseRow=collapseRow\n    expandAllRows=expandAllRows\n    collapseAllRows=collapseAllRows\n    toggleAllSelection=toggleAllSelection\n  )\n  body=(\n    component themeInstance.components.table-body\n    columnsCount=columnsCount\n    visibleContent=visibleContent\n    selectedItems=selectedItems\n    expandedItems=expandedItems\n    useDataGrouping=useDataGrouping\n    toggleGroupedRows=toggleGroupedRows\n    groupingRowComponent=groupingRowComponent\n    visibleProcessedColumns=visibleProcessedColumns\n    allColumnsAreHidden=allColumnsAreHidden\n    themeInstance=themeInstance\n    data=data\n    messages=messages\n    expandedRowComponent=expandedRowComponent\n    collapsedGroupValues=collapsedGroupValues\n    currentGroupingPropertyName=currentGroupingPropertyName\n    dataGroupOptions=dataGroupOptions\n    groupedVisibleContentValuesOrder=groupedVisibleContentValuesOrder\n    groupedVisibleContent=groupedVisibleContent\n    groupedArrangedContent=groupedArrangedContent\n    displayGroupedValueAs=displayGroupedValueAs\n    toggleGroupedRowsSelection=toggleGroupedRowsSelection\n    toggleGroupedRowsExpands=toggleGroupedRowsExpands\n    clickOnRow=clickOnRow\n    doubleClickOnRow=doubleClickOnRow\n    hoverOnRow=hoverOnRow\n    outRow=outRow\n    sendAction=sendAction\n    expandRow=expandRow\n    collapseRow=collapseRow\n    expandAllRows=expandAllRows\n    collapseAllRows=collapseAllRows\n  )\n  footer=(\n    component themeInstance.components.table-footer\n    visibleProcessedColumns=visibleProcessedColumns\n    themeInstance=themeInstance\n    data=data\n    goToPage=goToPage\n    messages=messages\n    selectedItems=selectedItems\n    expandedItems=expandedItems\n    clearFilters=clearFilters\n    sendAction=sendAction\n    expandRow=expandRow\n    collapseRow=collapseRow\n    expandAllRows=expandAllRows\n    collapseAllRows=collapseAllRows\n  )\n  themeInstance=themeInstance\n) as |t|}}\n  {{#if hasBlock}}\n    {{yield t}}\n  {{else}}\n    {{component t.header}}\n    {{component t.body}}\n    {{component t.footer}}\n  {{/if}}\n{{/with}}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- addon/templates/components/models-table/table.hbs	(revision 1807307f6a70716fee88bfad70a01aa4163c750f)
+++ addon/templates/components/models-table/table.hbs	(revision )
@@ -70,6 +70,7 @@
     expandAllRows=expandAllRows
     collapseAllRows=collapseAllRows
   )
+  showTableFooter=(if (get (reject-by "componentForFooterCell" "" visibleProcessedColumns) "length") true false)
   themeInstance=themeInstance
 ) as |t|}}
   {{#if hasBlock}}
@@ -77,6 +78,8 @@
   {{else}}
     {{component t.header}}
     {{component t.body}}
-    {{component t.footer}}
+    {{#if t.showTableFooter}}
+      {{component t.footer}}
+    {{/if}}
   {{/if}}
 {{/with}}
\ No newline at end of file
Index: addon/components/models-table/table-footer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Component from '@ember/component';\nimport layout from '../../templates/components/models-table/table-footer';\n\n/**\n * Table footer used within [models-table/table](Components.ModelsTableTable.html).\n *\n * By default it's an empty component. It should be used with a block context:\n *\n * ```hbs\n * {{#models-table data=data columns=columns as |mt|}}\n *   {{#mt.table as |table|}}\n *     {{#table.footer as |footer|}}\n *       {{! ... }}\n *     {{/table.footer}}\n *     {{! ... }}\n *   {{/mt.table}}\n *   {{! .... }}\n * {{/models-table}}\n * ```\n *\n * @class ModelsTableTableFooter\n * @extends Ember.Component\n * @namespace Components\n */\nexport default Component.extend({\n  layout,\n  tagName: 'tfoot',\n\n  /**\n   * Bound from {{#crossLink \"Components.ModelsTable/data:property\"}}ModelsTable.data{{/crossLink}}\n   *\n   * @property data\n   * @type object[]\n   * @default null\n   */\n  data: null,\n\n  /**\n   * Bound from {{#crossLink \"Components.ModelsTable/processedColumns:property\"}}ModelsTable.processedColumns{{/crossLink}}\n   *\n   * @property processedColumns\n   * @type ModelsTableColumn[]\n   * @default null\n   */\n  processedColumns: null,\n\n  /**\n   * Bound from {{#crossLink \"Components.ModelsTable/themeInstance:property\"}}ModelsTable.themeInstance{{/crossLink}}\n   *\n   * @property themeInstance\n   * @type object\n   * @default null\n   */\n  themeInstance: null,\n\n  /**\n   * Bound from {{#crossLink \"Components.ModelsTable/messages:property\"}}ModelsTable.messages{{/crossLink}}\n   *\n   * @property messages\n   * @type object[]\n   * @default null\n   */\n  messages: null,\n\n  /**\n   * Closure action {{#crossLink \"Components.ModelsTable/actions.goToPage:method\"}}ModelsTable.actions.goToPage{{/crossLink}}\n   *\n   * @event goToPage\n   */\n  goToPage: null,\n\n  /**\n   * Closure action {{#crossLink \"Components.ModelsTable/actions.clearFilters:method\"}}ModelsTable.actions.clearFilters{{/crossLink}}\n   *\n   * @event clearFilters\n   */\n  clearFilters: null,\n\n  /**\n   * Closure action {{#crossLink \"Components.ModelsTable/actions.sendAction:method\"}}ModelsTable.actions.sendAction{{/crossLink}}\n   *\n   * @event sendAction\n   */\n  sendAction: null,\n\n  /**\n   * Closure action {{#crossLink \"Components.ModelsTable/actions.expandRow:method\"}}ModelsTable.actions.expandRow{{/crossLink}}\n   *\n   * @event expandRow\n   */\n  expandRow: null,\n\n  /**\n   * Closure action {{#crossLink \"Components.ModelsTable/actions.collapseRow:method\"}}ModelsTable.actions.collapseRow{{/crossLink}}\n   *\n   * @event collapseRow\n   */\n  collapseRow: null,\n\n  /**\n   * Closure action {{#crossLink \"Components.ModelsTable/actions.expandAllRows:method\"}}ModelsTable.actions.expandAllRows{{/crossLink}}\n   *\n   * @event expandAllRows\n   */\n  expandAllRows: null,\n\n  /**\n   * Closure action {{#crossLink \"Components.ModelsTable/actions.collapseAllRows:method\"}}ModelsTable.actions.collapseAllRows{{/crossLink}}\n   *\n   * @event collapseAllRows\n   */\n  collapseAllRows: null,\n});\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- addon/components/models-table/table-footer.js	(revision 1807307f6a70716fee88bfad70a01aa4163c750f)
+++ addon/components/models-table/table-footer.js	(revision )
@@ -36,13 +36,13 @@
   data: null,
 
   /**
-   * Bound from {{#crossLink "Components.ModelsTable/processedColumns:property"}}ModelsTable.processedColumns{{/crossLink}}
+   * Bound from {{#crossLink "Components.ModelsTable/visibleProcessedColumns:property"}}ModelsTable.visibleProcessedColumns{{/crossLink}}
    *
-   * @property processedColumns
+   * @property visibleProcessedColumns
    * @type ModelsTableColumn[]
    * @default null
    */
-  processedColumns: null,
+  visibleProcessedColumns: null,
 
   /**
    * Bound from {{#crossLink "Components.ModelsTable/themeInstance:property"}}ModelsTable.themeInstance{{/crossLink}}
@@ -57,11 +57,29 @@
    * Bound from {{#crossLink "Components.ModelsTable/messages:property"}}ModelsTable.messages{{/crossLink}}
    *
    * @property messages
-   * @type object[]
+   * @type object
    * @default null
    */
   messages: null,
 
+  /**
+   * Bound from {{#crossLink "Components.ModelsTable/selectedItems:property"}}ModelsTable.selectedItems{{/crossLink}}
+   *
+   * @property selectedItems
+   * @type object[]
+   * @default null
+   */
+  selectedItems: null,
+
+  /**
+   * Bound from {{#crossLink "Components.ModelsTable/expandedItems:property"}}ModelsTable.expandedItems{{/crossLink}}
+   *
+   * @property expandedItems
+   * @type object[]
+   * @default null
+   */
+  expandedItems: null,
+
   /**
    * Closure action {{#crossLink "Components.ModelsTable/actions.goToPage:method"}}ModelsTable.actions.goToPage{{/crossLink}}
    *
Index: addon/templates/components/models-table/cell-column-summary.hbs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- addon/templates/components/models-table/cell-column-summary.hbs	(revision )
+++ addon/templates/components/models-table/cell-column-summary.hbs	(revision )
@@ -0,0 +1,5 @@
+<p>minSelected - {{minSelected}}</p>
+<p>maxSelected - {{maxSelected}}</p>
+<p>avgSelected - {{avgSelected}}</p>
+<p>sumSelected - {{sumSelected}}</p>
+{{yield}}
\ No newline at end of file

Index: addon/templates/components/models-row.hbs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- addon/templates/components/models-row.hbs	(revision )
+++ addon/templates/components/models-row.hbs	(revision )
@@ -0,0 +1,34 @@
+{{#each processedColumns as |column|}}
+  {{#if column.isVisible}}
+    <td class={{column.className}}>
+      {{#if column.routeName}}
+        {{#link-to column.routeName record.id}}
+          {{#if column.propertyName}}
+            {{get record column.propertyName}}
+          {{else}}
+            {{record.id}}
+          {{/if}}
+        {{/link-to}}
+      {{else}}
+        {{#if column.template}}
+          {{partial column.template}}
+        {{else}}
+          {{#if column.component}}
+            {{component column.component data=data record=record column=column table=table}}
+          {{else}}
+            {{get record column.propertyName}}
+          {{/if}}
+        {{/if}}
+      {{/if}}
+    </td>
+  {{/if}}
+{{/each}}
+{{#if (exists-in expandedRowIndexes index)}}
+  <tr class="expand-row {{concat "expand-" index}} {{if (exists-in selectedItems record) "selected-expand"}}" {{action
+    "clickOnRow" index record on="click"}}>
+    <td colspan="{{visibleProcessedColumns.length}}">
+      {{partial expandedRowTemplate}}
+    </td>
+  </tr>
+{{/if}}
+{{yield}}
\ No newline at end of file
Index: addon/components/models-row.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- addon/components/models-row.js	(revision )
+++ addon/components/models-row.js	(revision )
@@ -0,0 +1,31 @@
+import Ember from 'ember';
+import layout from '../templates/components/models-row';
+
+const {computed, get} = Ember;
+
+export default Ember.Component.extend({
+  layout,
+  tagName: 'tr',
+  classNameBindings: ['selected-row:isSelected'],
+  isSelected: computed('selectedItems.[]', 'record', function () {
+    return get(this, 'selectedItems').indexOf(get(this, 'record')) !== -1;
+  }),
+  data: null,
+  table: null,
+  index: null,
+  record: null,
+  selectedItems: null,
+  expandedRowIndexes: null,
+  visibleProcessedColumns: null,
+  expandedRowTemplate: null,
+  processedColumns: null,
+  clickOnRow: null,
+  click() {
+    this.clickOnRow(get(this, 'index'), get(this, 'record'));
+  },
+  actions: {
+    clickOnRow() {
+      this.clickOnRow(get(this, 'index'), get(this, 'record'));
+    }
+  }
+});
Index: addon/templates/components/models-table.hbs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><div class=\"models-table-wrapper {{classes.outerTableWrapper}}\">\n  <div class=\"{{classes.globalFilterDropdownWrapper}}\">\n    {{! global filter start }}\n    {{#if showGlobalFilter}}\n      {{partial globalFilterTemplate}}\n    {{/if}}\n    {{! global filter end }}\n    {{! columns dropdown start }}\n    {{#if showColumnsDropdown}}\n      {{partial columnsDropdownTemplate}}\n    {{/if}}\n    {{! columns dropdown end }}\n  </div>\n\n  <!-- Div needed by Firefox to reset floating positioning -->\n  <div class='models-table-clear'></div>\n\n  <div class=\"{{classes.innerTableWrapper}}\">\n    <table class=\"{{classes.table}}\">\n      {{! table header start }}\n      <thead class=\"{{if noHeaderFilteringAndSorting 'table-header-no-filtering-and-sorting'}} {{classes.thead}}\">\n        {{#if groupedHeaders.length}}\n          {{partial headerGroupedRowsTemplate}}\n        {{/if}}\n        {{partial headerSortingRowTemplate}}\n        {{#if useFilteringByColumns}}\n          {{partial headerFilteringRowTemplate}}\n        {{/if}}\n      </thead>\n      {{! table header end }}\n      {{! table body start }}\n      <tbody>\n        {{#if allColumnsAreHidden}}\n          {{partial allColumnsHiddenTemplate}}\n        {{else}}\n          {{#if visibleContent.length}}\n            {{! template-lint-disable unused-block-params}}\n            {{#each visibleContent as |record index|}}\n              {{partial rowTemplate}}\n            {{/each}}\n            {{! template-lint-enable unused-block-params}}\n          {{else}}\n            {{partial noDataShowTemplate}}\n          {{/if}}\n        {{/if}}\n      </tbody>\n      {{! table body end }}\n      {{! table footer start }}\n      <tfoot>\n        {{partial tableFooterTemplate}}\n      </tfoot>\n      {{! table footer end }}\n    </table>\n  </div>\n  {{! table footer start }}\n  {{#if showComponentFooter}}\n    {{partial componentFooterTemplate}}\n  {{/if}}\n  {{! table footer end }}\n</div>\n{{yield}}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- addon/templates/components/models-table.hbs	(revision f3c1ebd78dfe1432e528cb493d35a0b27cc15051)
+++ addon/templates/components/models-table.hbs	(revision )
@@ -36,7 +36,18 @@
           {{#if visibleContent.length}}
             {{! template-lint-disable unused-block-params}}
             {{#each visibleContent as |record index|}}
-              {{partial rowTemplate}}
+              {{models-row
+                data=data
+                table=this
+                index=index
+                record=record
+                selectedItems=_selectedItems
+                expandedRowIndexes=_expandedRowIndexes
+                visibleProcessedColumns=visibleProcessedColumns
+                expandedRowTemplate=expandedRowTemplate
+                processedColumns=processedColumns
+                clickOnRow=(action "clickOnRow" index record)
+              }}
             {{/each}}
             {{! template-lint-enable unused-block-params}}
           {{else}}
Index: app/components/models-row.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/components/models-row.js	(revision )
+++ app/components/models-row.js	(revision )
@@ -0,0 +1,1 @@
+export { default } from 'ember-models-table/components/models-row';
\ No newline at end of file
